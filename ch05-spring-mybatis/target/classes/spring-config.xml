<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!--    告诉spring数据库配置文件位置-->
    <context:property-placeholder location="classpath:jdbc.properties" />

<!--    声明数据源Datasource, 作用是连接数据库-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <property name="maxActive" value="${jdbc.maxActive}" />

    </bean>

<!--    声明的是mybatis中提供的SqlSessionFactoryBean类, 这个类在内部创建了sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

<!--        需要给它提供数据源配置信息-->
        <property name="dataSource" ref="myDataSource" />

<!--        需要给它提供mybatis主配置文件所在位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

<!--    创建dao对象, 之前是使用SqlSession的getMapper(StudentDao.class)创建-->
<!--    现在使用MapperScannerConfigurer,在内部调用getMapper()生成每个dao接口的代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

<!--        首先需要指定sqlSessionFactory的bean id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
<!--        MapperScannerConfigurer会扫描指定包中的所有接口, 把每个接口都执行一次getMapper()方法-->
<!--        从而得到每个dao的代理对象, 并将生成的dao对象放入spring容器中, dao对象的默认名称(id)是首字母小写类名-->
        <property name="basePackage" value="com.unicorn.dao" />
    </bean>

<!--    service-->
    <bean id="studentService" class="com.unicorn.service.impl.StudentServiceImpl" autowire="byName">
    </bean>
</beans>